@model laboratoare.Models.Book
@{
    ViewBag.Title = "Update book";
}

<h2>@ViewBag.Title</h2>

@using (Html.BeginForm(actionName: "Edit", controllerName: "Book"))
{
    @Html.HttpMethodOverride(HttpVerbs.Put)
    @Html.HiddenFor(b => b.BookId)
    <br />

    @Html.Label("Title", "Title:")
    <br />
    @Html.EditorFor(book => book.Title, new { htmlAttributes = new { @class = "form-control" } })
    @Html.ValidationMessageFor(b => b.Title, "" /* validation message e cel din clasa model */, new { @class = "text-danger" })
    <br />

    @Html.Label("Author", "Author:")
    <br />
    @Html.EditorFor(book => book.Author, new { htmlAttributes = new { @class = "form-control" } })
    @Html.ValidationMessageFor(b => b.Author, "" /* validation message e cel din clasa model */, new { @class = "text-danger" })
    <br />

    @Html.Label("Summary", "Summary:")
    <br />
    @* @Html.TextAreaFor(book => book.Summary, new { placeHolder = "Type in the book's Summary", @class = "form-control" }) *@
    @Html.TextAreaFor(b => b.Summary, new {  @class = "form-control", @rows = "10" })
    @Html.ValidationMessageFor(b => b.Summary, "" /* validation message e cel din clasa model */, new { @class = "text-danger" })
    <br />

    <button class="btn btn-primary" type="submit">
        Update
    </button>
}

