.data
sir: .asciiz "()())("
corect: .asciiz " corect"
gresit: .asciiz " gresit"
car1: .byte '('

.text
main:
subi $sp,$sp,4
la $t0,sir
sw $t0,0($sp)
li $v0,0

jal functie

addi $sp,$sp,4

beqz $v0,Gresit
Corect:
li $v0,4
la $a0,corect
syscall

li $v0,4
la $a0,sir
syscall

li $v0,10
syscall

Gresit:

li $v0,4
la $a0,gresit
syscall

li $v0,4
la $a0,sir
syscall

li $v0,10
syscall

functie:
subu $sp,$sp,4
sw $fp,0($sp)
addi $fp,$sp,0

lw $t0,4($fp) # adresa sirului
li $t1,0 # contorul =0 initial
lb $t2,0($t0) #primul element
lb $t3,car1

while:
beqz $t2 iesire
beq $t2,$t3 adunare 
subi $t1,$t1,1
j sareIf
adunare:
addi $t1,$t1,1
sareIf:
bgez $t1, continuare #daca contor>=0 merge pe continuare
li $v0,0
j iesire

continuare:
addi $t0,$t0,1
lb $t2,0($t0)
j while

iesire:

beqz $t1, ok
li $v0,0
j et
ok:
li $v0,1
et:
addi $sp,$sp,4
lw $fp,0($fp)

jr $ra

